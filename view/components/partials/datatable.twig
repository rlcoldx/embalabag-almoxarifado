{# Componente DataTable Reutilizável #}
<div class="datatable-container" data-table="{{ table_name }}" data-url="{{ data_url }}">
    
    {# Filtros #}
    <div class="card custom-card mb-3">
        <div class="card-header justify-content-between align-items-center">
            <div class="card-title">
                <i class="fas fa-filter me-2"></i>Filtros
            </div>
            <div class="card-tools">
                <button type="button" class="btn btn-sm btn-outline-primary" onclick="clearFilters('{{ table_name }}')">
                    <i class="fas fa-sync-alt me-1"></i>Limpar
                </button>
            </div>
        </div>
        <div class="card-body py-0">
            <div class="row" id="filters-{{ table_name }}">
                {# Filtros serão carregados dinamicamente via JavaScript #}
            </div>
        </div>
    </div>

    {# Tabela #}
    <div class="card custom-card">
        <div class="card-header justify-content-between">
            <div class="card-title">
                <i class="fas fa-table me-2"></i>{{ title|default('Lista de Dados') }}
            </div>
            <div class="d-flex align-items-center">
                {# Pesquisa Global #}
                <div class="input-group" style="width: 300px;">
                    <input type="text" class="form-control" id="search-{{ table_name }}" placeholder="Pesquisar...">
                    <button class="btn btn-outline-primary" type="button" onclick="searchData('{{ table_name }}')">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                
                {# Botões de Ação #}
                {% if export_button %}
                <div class="btn-list ms-3">
                    <button type="button" class="btn btn-success btn-sm" onclick="exportToCSV('{{ table_name }}')">
                        <i class="fas fa-download"></i>
                    </button>
                </div>
                {% endif %}
            </div>
        </div>
        
        <div class="card-body p-0">
            {# Controles de Paginação Superior #}
            <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
                <div class="d-flex align-items-center">
                    <span class="text-muted me-2">Mostrar:</span>
                    <select class="form-select form-select-sm me-3" id="limit-{{ table_name }}" style="width: auto;" onchange="changeLimit('{{ table_name }}')">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                    <span class="text-muted" id="info-{{ table_name }}">Mostrando 0 de 0 registros</span>
                </div>
                <div class="d-flex align-items-center">
                    <span class="text-muted me-2">Ordenar por:</span>
                    <select class="form-select form-select-sm me-2" id="order-by-{{ table_name }}" style="width: auto;" onchange="changeOrder('{{ table_name }}')">
                        {# Opções serão carregadas dinamicamente #}
                    </select>
                    <button type="button" class="btn btn-sm btn-outline-primary" id="order-dir-{{ table_name }}" onclick="toggleOrderDirection('{{ table_name }}')">
                        <i class="fas fa-arrow-up"></i>
                    </button>
                </div>
            </div>

            {# Tabela #}
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="table-{{ table_name }}">
                    <thead class="table-light">
                        <tr id="header-{{ table_name }}">
                            {# Cabeçalhos serão carregados dinamicamente #}
                        </tr>
                    </thead>
                    <tbody id="body-{{ table_name }}">
                        <tr>
                            <td colspan="100" class="text-center py-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Carregando...</span>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

            {# Paginação Inferior #}
            <div class="d-flex justify-content-between align-items-center p-3 border-top">
                <div class="text-muted" id="pagination-info-{{ table_name }}">
                    Página 1 de 1
                </div>
                <nav aria-label="Navegação de páginas">
                    <ul class="pagination pagination-sm mb-0" id="pagination-{{ table_name }}">
                        {# Paginação será carregada dinamicamente #}
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

{# Template para linha vazia #}
<template id="empty-row-{{ table_name }}">
    <tr>
        <td colspan="100" class="text-center py-4">
            <i class="fas fa-inbox fs-48 text-muted mb-2"></i>
            <p class="text-muted mb-0">Nenhum registro encontrado</p>
        </td>
    </tr>
</template>

{# Template para linha de dados #}
<template id="data-row-{{ table_name }}">
    <tr>
        {# Células serão preenchidas dinamicamente #}
    </tr>
</template>

{# Script específico para esta tabela #}
<script src="{{ PATH }}/view/assets/js/datatable.js?v={{ VERSION }}"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Inicializar DataTable
    initDataTable('{{ table_name }}', '{{ data_url }}');
    
    // Configurar pesquisa com debounce
    let searchTimeout;
    document.getElementById('search-{{ table_name }}').addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(function() {
            searchData('{{ table_name }}');
        }, 500);
    });
});
</script> 